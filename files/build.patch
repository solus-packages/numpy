--- numpy-1.9.1/numpy/distutils/fcompiler/__init__.py~	2014-10-26 10:36:14.000000000 -0400
+++ numpy-1.9.1/numpy/distutils/fcompiler/__init__.py	2015-01-23 08:32:08.466409971 -0500
@@ -184,7 +184,7 @@
                             # but if it is missing then object_switch
                             # will be prefixed to object file name by
                             # string concatenation.
-    library_switch = "-o "  # Ditto!
+    library_switch = "-shared -lgfortran -o  "  # Ditto!

     # Switch to specify where module files are created and searched
     # for USE statement.  Normally it is a string and also here ending
--- numpy-1.9.1/numpy/distutils/fcompiler/__init__.py~	2015-01-23 08:32:08.000000000 -0500
+++ numpy-1.9.1/numpy/distutils/fcompiler/__init__.py	2015-01-23 08:53:09.279647636 -0500
@@ -194,7 +194,7 @@
     # Switch to specify where module files are searched for USE statement.
     module_include_switch = '-I'

-    pic_flags = []           # Flags to create position-independent code
+    pic_flags = ['-fPIC']           # Flags to create position-independent code

     src_extensions = ['.for', '.ftn', '.f77', '.f', '.f90', '.f95', '.F', '.F90', '.FOR']
     obj_extension = ".o"
--- numpy-1.9.1/numpy/distutils/fcompiler/__init__.py~	2015-01-23 08:53:09.000000000 -0500
+++ numpy-1.9.1/numpy/distutils/fcompiler/__init__.py	2015-01-23 09:09:31.315370500 -0500
@@ -179,7 +179,7 @@
     # gnu95 compiler type when there are F90 sources.
     suggested_f90_compiler = None

-    compile_switch = "-c"
+    compile_switch = "-fPIC -c -lgfortran"
     object_switch = "-o "   # Ending space matters! It will be stripped
                             # but if it is missing then object_switch
                             # will be prefixed to object file name by
--- numpy-1.10.4/numpy/distutils/system_info.py~	2016-01-07 02:16:25.000000000 +0000
+++ numpy-1.10.4/numpy/distutils/system_info.py	2016-03-22 16:44:47.733629864 +0000
@@ -1742,7 +1742,7 @@
 class openblas_info(blas_info):
     section = 'openblas'
     dir_env_var = 'OPENBLAS'
-    _lib_names = ['openblas']
+    _lib_names = ['openblas', 'gfortran']
     notfounderror = BlasNotFoundError

     def check_embedded_lapack(self, info):
